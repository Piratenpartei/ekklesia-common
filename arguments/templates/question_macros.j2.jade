- macro question_tags(tags)
  ul.list-inline
    for tag in tags
      li.list-inline-item
        a(href="/tags/{{ tag.tag }}")
          span.tag_text= tag.tag


- macro question_actions(question, user, goto_label)
  
  vote = question.user_vote(user) if user.is_authenticated else None
  upvoted = vote != None

  div
    if user.is_authenticated
      button.btn.btn-primary(hidden=upvoted
          data-action="question_vote"
          data-question-id=question.id)
          i.fa.fa-thumbs-up &nbsp;
          | Unterst체tzen

      button.btn.btn-secondary(hidden=(not upvoted)
          data-action="question_revoke_vote"
          data-question-id=question.id)
          i.fa.fa-remove &nbsp;
          | Unterst체tzung zur체ckziehen

      button.btn.btn-danger-outline
        i.fa.fa-thumbs-down &nbsp;
        | Melden

    button.btn.btn-secondary
      i.fa.fa-share &nbsp;
      | Teilen

    a.btn.btn-secondary(href="#bottom")
      i.fa.fa-comments &nbsp;
      = goto_label



- macro question_box(question, user, goto_label, no_margin=False, voting=False, details=False, show_actions=False)

  //argument_count = question.arguments.count()
  argument_count = 1

  .question(id="question_{{ question.id }}", 
            class=("question_no_margin" if no_margin else ""))
    .row
      .question_sidebar

        .authoring_info
          small.author=_("authored_at", dt=question.created_at|datetimeformat)

        .points
          i.fa.fa-thumbs-up &nbsp;
          strong.question_info_number(id="question_score_{{ question.id }}")= question.score
          | &nbsp;
          span= ngettext("supporter", "supporters", question.score)

        .argument_count
          i.fa.fa-comments &nbsp;
          strong.question_info_number= argument_count
          | &nbsp;
          span= ngettext("argument", "arguments", argument_count)

      .question_body
        h4.question_title
            a(href=url_for("question", question_url=question.url))= question.title

        = question_tags(question.tags)

        if details
          .question_details
            p
              = question.details|markdown

        if show_actions
          = question_actions(question, user, goto_label)


- macro tag_filter_box(tag, mode)
  ol.breadcrumb
    li
      a(href=url_for("questions", mode=mode))
        = _("overview")
    li.active
      | Nur Antr채ge mit Tag: 
      span.tag_text= tag


- macro search_filter_box(searchterm, mode)
  ol.breadcrumb
    li
      a(href=url_for("questions", mode=mode))
        = _("overview")
    li.active
      = _("search_for")
      |: 
      strong= searchterm


- macro question_tabline(question, active_tab)
  .question_toolbar
    .question_tabs
      a.tab(class=("inactive" if active_tab != "discussion" else "")
            href=url_for("question", question_url=question.url))= _("discussion")

      a.tab(class=("inactive" if active_tab != "associated" else "")
            href=url_for("question_associated", question_url=question.url))= _("associated")


- macro question_box_small(question, side)
  .associated_question(class=("associated_question_" + side))
    .row
      .col-sm-2
        .authoring_info
          small.author=_("authored_at", dt=question.created_at|datetimeformat)

        .points
          i.fa.fa-thumbs-up &nbsp;
          strong.question_info_number(id="question_score_{{ question.id }}")= question.score
          | &nbsp;
          span= ngettext("supporter", "supporters", question.score)

      .col-sm-8
        h5.associated_question_title
          a(href=url_for("question", question_url=question.url))= question.title



//- vim: set filetype=jade sw=2 ts=2 sts=2 expandtab:
