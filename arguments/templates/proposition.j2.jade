- if layout
  - extends "layout.j2.jade"

- macro proposition_tags(tags)
  ul.list-inline
    for tag in tags
      li.list-inline-item
        a(href="/tags/{{ tag.tag }}")
          span.tag_text= tag.tag


- macro proposition_actions(proposition, user, goto_label)
  
  vote = user_vote(user) if user.is_authenticated else None
  upvoted = vote != None

  div
    if user.is_authenticated
      button.btn.btn-primary(hidden=upvoted
          data-action="proposition_vote"
          data-proposition-id=id)
          i.fa.fa-thumbs-up &nbsp;
          | Unterstützen

      button.btn.btn-secondary(hidden=(not upvoted)
          data-action="proposition_revoke_vote"
          data-proposition-id=id)
          i.fa.fa-remove &nbsp;
          | Unterstützung zurückziehen

      button.btn.btn-danger-outline
        i.fa.fa-thumbs-down &nbsp;
        | Melden

    button.btn.btn-secondary
      i.fa.fa-share &nbsp;
      | Teilen

    a.btn.btn-secondary(href="#bottom")
      i.fa.fa-comments &nbsp;
      = goto_label

      
- block title
  title= title


- block content

  if options.small
    .associated_proposition(class=("associated_proposition_" + side))
      .row
        .col-sm-2
          .authoring_info
            small.author=_("authored_at", dt=created_at)

          .points
            i.fa.fa-thumbs-up &nbsp;
            strong.proposition_info_number(id="proposition_score_{{ id }}")= supporter_count
            | &nbsp;
            span= ngettext("supporter", "supporters", supporter_count)

        .col-sm-8
          h5.associated_proposition_title
            a(href=self_link)= title

  else
    if options.show_tabs
      .proposition_toolbar
        .proposition_tabs
          a.tab(class=("inactive" if active_tab != "discussion" else "")
                href=self_link)= _("discussion")

          a.tab(class=("inactive" if active_tab != "associated" else "")
                href=self_link)= _("associated")
    
    .proposition(id="proposition_{{ id }}", 
              class=("" if options.margin else "proposition_no_margin"))
      .row
        .proposition_sidebar

          .authoring_info
            small.author=_("authored_at", dt=created_at)

          .points
            i.fa.fa-thumbs-up &nbsp;
            strong.proposition_info_number(id="proposition_score_{{ id }}")= supporter_count
            | &nbsp;
            span= ngettext("supporter", "supporters", supporter_count)

          .argument_count
            i.fa.fa-comments &nbsp;
            strong.proposition_info_number= argument_count
            | &nbsp;
            span= ngettext("argument", "arguments", argument_count)

        .proposition_body
          h4.proposition_title
              a(href=self_link)= title

          = proposition_tags(tags)

          if options.show_details
            .proposition_details
              p
                = content|markdown
              p
                = motivation|markdown

          if options.show_actions
            = proposition_actions(_model, current_user, _("goto_arguments"))



    if options.show_arguments
      .arguments
        a(name="bottom")

        .proposition_col.pro
          = render_cell(collection=pro_arguments)

          a(href=new_argument_url("pro")) 
            .button_add_related
              i.fa.fa-thumbs-o-up &nbsp;
              = _("add_pro_argument")

        .proposition_col.con
          = render_cell(collection=contra_arguments)

          a(href=new_argument_url("con")) 
            .button_add_related
              i.fa.fa-thumbs-o-down &nbsp;
              = _("add_con_argument")

- block script
  script.
    $(function() {
      $("[data-action='argument_vote_up']").click(function() {
        var revoke = $(this).data("revoke");
        var argument_id = $(this).data("argument-id");
        Sijax.request("argument_vote", [argument_id, revoke ? 0 : 1]);
      });

      $("[data-action='argument_vote_dn']").click(function() {
        var revoke = $(this).data("revoke");
        var argument_id = $(this).data("argument-id");
        Sijax.request("argument_vote", [argument_id, revoke ? 0 : -1]);
      });

      $("[data-action='proposition_vote']").click(function() {
        var proposition_id = $(this).data("proposition-id");
        Sijax.request("proposition_vote", [proposition_id, 1]);
      });

      $("[data-action='proposition_revoke_vote']").click(function() {
        var proposition_id = $(this).data("proposition-id");
        Sijax.request("proposition_vote", [proposition_id, 0]);
      });
    });


    change_proposition_vote_actions = function(proposition_id, old_value, value) {
      
      vote_btn = $(`[data-action='proposition_vote'][data-proposition-id='${proposition_id}']`);
      revoke_vote_btn = $(`[data-action='proposition_revoke_vote'][data-proposition-id='${proposition_id}']`);

      if (old_value == 0 && value == 1) {
        vote_btn.prop("hidden", "hidden")
        revoke_vote_btn.prop("hidden", false)
      }
      else if (old_value == 1 && value == 0) {
        vote_btn.prop("hidden", false)
        revoke_vote_btn.prop("hidden", "hidden")
      }
    }


    change_argument_vote_actions = function(argument_id, old_value, value) {

      vote_up = $(`[data-action='argument_vote_up'][data-argument-id='${argument_id}']`);
      vote_dn = $(`[data-action='argument_vote_dn'][data-argument-id='${argument_id}']`);

      if (old_value == 0 && value == 1) {
        vote_up.addClass("active");
        vote_up.data("revoke", true);
      }
      else if (old_value == 0 && value == -1) {
        vote_dn.addClass("active");
        vote_dn.data("revoke", true);
      }
      else if (old_value == 1 && value == 0) {
        vote_up.removeClass("active");
        vote_up.data("revoke", false);
      }
      else if (old_value == -1 && value == 0) {
        vote_dn.removeClass("active");
        vote_dn.data("revoke", false);
      }
      else if (old_value == -1 && value == 1) {
        vote_dn.removeClass("active");
        vote_dn.data("revoke", false);
        vote_up.addClass("active");
        vote_up.data("revoke", true);
      }
      else if (old_value == 1 && value == -1) {
        vote_up.removeClass("active");
        vote_up.data("revoke", false);
        vote_dn.addClass("active");
        vote_dn.data("revoke", true);
      }
    };

// generated from jade
//- vim: set filetype=jade sw=2 ts=2 sts=2 expandtab:
